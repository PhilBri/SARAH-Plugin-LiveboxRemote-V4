var lbCmd,
    oldStatus;

function sendLiveBox (data, cfgLiveBox, sendClbk) {
    var ipCmd = require ('ipCmd')[data.cmd],
        cmdTab = [];
    lbCmd = data;
    
    if (ipCmd) {
        ipCmd = ipCmd.split(',');
        while (ipCmd.length) {
            var s = ipCmd.shift().split(':');
            cmdTab.push ('operation=01&key=' + s.shift() +'&mode=' + s);
        };
    }
    else if (data.hasOwnProperty('epg'))
        cmdTab.push ('operation=09&epg_id=' + "*".repeat (10 - (data.epg.length)) + data.epg + '&uui=1');

    cmdTab.push ('operation=10');
    sendData (cmdTab, cfgLiveBox, sendClbk);
}

function sendData (cmdTab, cfgLiveBox, clbk) {
    if (cmdTab.length) {
        var cmd = cmdTab[0],
            options = { url: 'http://' + cfgLiveBox.IP + ':8080/remoteControl/cmd?' + cmd };

        require ('request')(options, function (err, response, boxStatus) {
            if ( !err && response.statusCode == 200 ) {
                boxStatus = JSON.parse (boxStatus);
                boxStatus = boxStatus.result.data.activeStandbyState || boxStatus.result.detail;

                if (lbCmd == 'getState')
                    oldStatus = boxStatus;
                if (lbCmd.cmd == 'Shutdown' && cmd == 'operation=10' && (boxStatus == oldStatus || boxStatus == 'STB not ready'))
                    cmdTab.push ('operation=10');

                clbk (boxStatus);
                cmdTab.shift();
                sendData (cmdTab, cfgLiveBox, clbk);
            }
            else error ('[ LiveboxRemote ]', err);
        });
    }
}
module.exports = sendLiveBox;
